/**
 *
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1,2,3,5,8,13,21,34,55,89,...
By considering the terms in the Fibonacci sequence whose values do not exceed N, find the sum of the even-valued terms.

Input Format 
First line contains T that denotes the number of test cases. This is followed by T lines, each containing an integer, N.

Output Format 
Print the required answer for each test case.

Constraints 
1<=T<=105 
10<=N<=4*1016
 * 
 */
package com.stackthread;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Problem2EvenNbrFibonacci {

    public static void main(String[] args) 
	{
		/* Enter your code here. Read input from STDIN. PrLong output to STDOUT. Your class should be named Solution. */
		Scanner sc = new Scanner(System.in);
		Integer nTestCases = 0;
		Long nbr = 0L;
		Long currTestCase = 0L;
		Long tmp = 0L;
		Long prev = 0L;
		Long cur = 0L;
		Long total = 0L;
		nTestCases = sc.nextInt();
		List <Long>sum = new ArrayList<Long>();

		while(currTestCase<nTestCases)
		{

			nbr = sc.nextLong();
			prev =0L;
			cur = 1L;
			total = 0L;
			while( true)
			{	
				//System.out.print( prev + ",");
				tmp = prev + cur;
				prev = cur;				
				cur = tmp;
				
				if(cur >= nbr)
					break;
				
				if (cur % 2 == 0)
					total += cur;
			}
			currTestCase++;
			sum.add(total);
		}
		for(Long num : sum)
		{
			System.out.println(num);
		}    
		sc.close();
    }
}